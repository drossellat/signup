<?php/*///////////////////////////////////////////////////////////////////////Part of the code from the book Building Findable Websites: Web Standards, SEO, and Beyondby Aarron Walter (aarron@buildingfindablewebsites.com)http://buildingfindablewebsites.comDistrbuted under Creative Commons licensehttp://creativecommons.org/licenses/by-sa/3.0/us////////////////////////////////////////////////////////////////////////*/function storeAddress(){		// Validation	if(!$_GET['email']){ return "No email address provided"; } 	if(!preg_match("/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*$/i", $_GET['email'])) {		return "Email address is invalid"; 	}	require_once($_SERVER['DOCUMENT_ROOT'] . '/wp-content/custom_code/MCAPI.class.php');	// grab an API Key from http://admin.mailchimp.com/account/api/	$api = new MCAPI('2b4ed5b0e0db590a0cb02d440dc085ff-us4');	// grab your List's Unique Id by going to http://admin.mailchimp.com/lists/	// Click the "settings" link for the list - the Unique Id is at the bottom of that page. 	$list_id = "746ee452a3";		$merge_vars = array(		'EMAIL' => $_GET['email'],        'FNAME' => $_GET['fname'],         'LNAME' => $_GET['lname'],        'ORG' => $_GET['organization'],        'GROUPINGS'=>array(array('name'=>'interested in', 'groups'=>'')));$useFamily = $_GET['useFamily'];$useOrganization = $_GET['useOrganization'];if($useFamily != 'undefined' && $useOrganization != 'undefined'){	$groupVal = 'Family, Organization';	$merge_vars['GROUPINGS'][0]['groups']=$groupVal;} if($useFamily != 'undefined' && $useOrganization == 'undefined'){	$groupVal = 'Family';	$merge_vars['GROUPINGS'][0]['groups']=$groupVal;}if($useFamily == 'undefined' && $useOrganization != 'undefined'){	$groupVal = 'Organization';	$merge_vars['GROUPINGS'][0]['groups']=$groupVal;}	if($api->listSubscribe($list_id, $_GET['email'], $merge_vars) === true) {		// It worked!			return 'Success! Check your email to confirm sign up.';	}else{		// An error ocurred, return error message			return 'Error: ' . $api->errorMessage;	}	}// If being called via ajax, autorun the functionif($_GET['ajax']){ echo storeAddress(); }?>